---
title: "722 - Assignment 1"
format: html
editor: visual
---

```{r}
library("tidyverse")
#install.packages("vcfR")
library("vcfR")

read.vcf <- function(file, special.char="##", ...) {
  search.term=paste0(special.char, ".*")
  all.lines=readLines(file)
  clean.lines=gsub(search.term, "",  all.lines)
  clean.lines=gsub("#CHROM", "CHROM", clean.lines)
  read.table(..., text=paste(clean.lines, collapse="\n"))
}

```

```{r}

snm <- read.vcf("snm.vcf",header=TRUE, stringsAsFactors=FALSE)

results <- data.frame(Start=min(snm$POS), End=max(snm$POS), SNPs=0)

for (i in 1:nrow(results)) { 
  d=subset(snm, (snm$POS>=results$Start[i] & snm$POS<=results$End[i]))  # Get the subset of data within the window
  results$SNPs[i] <- nrow(d) # Count the number of SNPs in the window, add to results table
}



num.samples <- ncol(snm)-9
results$Nchr <- 2*(num.samples)

 WT_funtion <- function(S,n){
   harm_num <- sum(1/ 1:(n-1))
   watt_theta <- S / harm_num
  return(watt_theta)
 }

WT_funtion(S = results$SNPs, n = results$Nchr)

results$Watt_Theta <- WT_funtion(S = results$SNPs, n = results$Nchr)


results$Pi=rep(0, nrow(results))  # an empty column of zeros to collect the the incoming Pi values

# n = #of chromosomes we have available
# count # of 1s and divide that by the 20(# of chromosomes)

d <- d[10:19]

hom0 <- rowSums(d == "0|0", na.rm = TRUE)
het1<- rowSums(d == "1|0", na.rm = TRUE)
hom1 <- rowSums(d == "1|1", na.rm = TRUE)
het0 <- rowSums(d == "0|1", na.rm = TRUE)

one_zero <- as_tibble(het1)
zero_one <- as_tibble(het0)
one_one <- as_tibble(hom1)
zero_zero <- as_tibble(hom0)


d3 <- as.data.frame(c(zero_one, one_one, one_zero, zero_zero))
d3 <- setNames(d3, c("het0","hom1","het1","hom0"))

total_one <- 2*hom1+(het0+het1)
total_zero <- 2*hom0 +(het0+het1)


# find the sum of ps and q for each row. then find the pi value for each row. then sum up all the pis. then do the correction analysis. 

p <- (total_one)/20

q <- (total_zero)/20

#getting pi for each row

pi <- 2*p*q
pi <- sum(pi)

chr <- results$Nchr
correction <- chr/(chr-1)
 

pi <- pi*correction

results$Pi <- pi


# finding taj D

variance.d <- function(n,S) {
  a1=sum(1/(seq(from=1, to=(n-1), by=1)))
  a2=sum(1/((seq(from=1, to=(n-1), by=1))**2))
  b1=(n+1)/(3*(n-1))
  b2=(2*((n**2)+n+3))/((9*n)*(n-1))
  c1=b1 - (1/a1)
  c2=b2-((n+2)/(a1*n)) + (a2/(a1**2))
  e1=c1/a1
  e2=c2/((a1**2)+a2)
  var=(e1*S) + (e2*S*(S-1))
  return(var)
} #End function

var <- variance.d(20, 1335)

#Empty vector for Tajima's D values
results$TajimasD = rep(0, nrow(results))

#filling empty vector
results$TajimasD <- ((results$Pi - results$Watt_Theta)/sqrt(var))

# plot results
plot(results$Start, results$TajimasD, pch=20,xlab="Position", ylab="Tajima's D", type="l", ylim=c(-3,1))

```


Personal Analysis (steps 6+)

```{r}
#1:113639554-113680519

stu <- read.vcf("1.113639554-113680519.ALL.chr1_GRCh38.genotypes.20170504.vcf.gz", header = TRUE, stringsAsFactors=FALSE)

dim(stu)  
str(stu) 

windows <- seq(min(stu$POS), max(stu$POS), by=5000)
stu_results <- data.frame(Start=windows, End=(windows+5000), SNPs=rep(0, length(windows))) 


#measuring SNPs for each window
for (i in 1:nrow(stu_results)) {
  q=subset(stu, (stu$POS>=stu_results$Start[i] & stu$POS<=stu_results$End[i])) 
  stu_results$SNPs[i] <- nrow(q) 
}

#getting the number of chromosomes
num.samples <- ncol(stu)-9
stu_results$Nchr <- 2*(num.samples)

#Calculating Watson theta
 WT_funtion <- function(S,n){
   harm_num <- sum(1/ 1:(n-1))
   watt_theta <- S / harm_num
  return(watt_theta)
 }

WT_funtion(S = stu_results$SNPs, n = stu_results$Nchr)

stu_results$Watt_Theta <- WT_funtion(S = stu_results$SNPs, n = stu_results$Nchr)

# creating a vector to hold the future pi values
stu_results$Pi=rep(0, nrow(stu_results))  # an empty column of zeros to collect the the incoming Pi values

for (i in 1:nrow(stu_results)) { # loop for every WINDOW
  q=subset(stu, (stu$POS>=stu_results$Start[i] & stu$POS<=stu_results$End[i]))
  
  shom0 <- rowSums(q == "0|0", na.rm = TRUE)
  shet1<- rowSums(q == "1|0", na.rm = TRUE)
  shom1 <- rowSums(q == "1|1", na.rm = TRUE)
  shet0 <- rowSums(q == "0|1", na.rm = TRUE)
  
   pi[i] <- sum(!is.na(stu[i, ]))

  
}

q1 <- as.data.frame(q[ ,10:50])


rowsum <- apply(q1, 1, sum)

```

