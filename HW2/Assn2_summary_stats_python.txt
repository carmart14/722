### Helpful functions for calculating summary statistics in python

def theta(S, n):
  ### S is the number of SNPs ( equal to len(seqMatrix[0]) )
  ### n is sample size
  return S / sum(1/numpy.array(range(1, n)))

def pi(j, n):
  ### j is a numpy array of derived allele counts for each SNP
  ### n is sample size
  return sum((2*j)*(n-j)/(n*(n-1)))

def variance_d(S, n):
  a1  = sum(1/numpy.array(range(1, n)))
  a2  = sum(1/numpy.array(range(1, n))**2)
  b1  = (n+1) / (3*(n-1))
  b2  = (2*((n**2)+n+3))/((9*n)*(n-1))
  c1  = b1 - (1/a1)
  c2  = b2-((n+2)/(a1*n)) + (a2/(a1**2))
  e1  = c1 / a1
  e2  = c2 / ((a1**2)+a2)
  var = (e1*S) + (e2*S*(S-1))
  return(var)

def tajimaD (j, S, n):
  return (pi(j, n) - theta(S, n)) / numpy.sqrt(variance_d(S, n))



